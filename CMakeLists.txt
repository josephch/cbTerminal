#Generated by CBProjectExporter : https://github.com/josephch/CBProjectExporter 
cmake_minimum_required(VERSION 3.24.0) 

project("default")
set(TARGET_OUTPUTNAME "cbTerminal")
# Include CMakePrintHelpers module:
include(CMakePrintHelpers)

# -------------------------------------------------------------------------------------------------

# Compiler Include paths:
include_directories("${CMAKE_SOURCE_DIR}/."
                    "${CMAKE_SOURCE_DIR}/json/include"
                    )

# Compiler flags:
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
find_package(PkgConfig REQUIRED)
pkg_check_modules(VTE-2.91 REQUIRED vte-2.91)
include_directories("${VTE-2.91_INCLUDE_DIRS}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${VTE-2.91_CFLAGS_OTHER}")
pkg_check_modules(CODEBLOCKS REQUIRED codeblocks)
include_directories("${CODEBLOCKS_INCLUDE_DIRS}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CODEBLOCKS_CFLAGS_OTHER}")
find_package(wxWidgets REQUIRED)
include(${wxWidgets_USE_FILE})
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")

# -------------------------------------------------------------------------------------------------

# Source files to compile:
FILE(GLOB SOURCE_FILES
            "cbTerminal.cpp"
            "cbTerminalViewManagerBase.cpp"
            "cbTerminalViewManagerLayout.cpp"
            "cbTerminalViewManagerMessagesNotebook.cpp"
            "cbTerminalView_VTE.cpp"

            "cbTerminal.hpp"
            "cbTerminalView.hpp"
            "cbTerminalViewManagerBase.hpp"
            "cbTerminalViewManagerLayout.hpp"
            "cbTerminalViewManagerMessagesNotebook.hpp"
    )

# Target type: ttDynamicLib - DLL
add_library(${TARGET_OUTPUTNAME} SHARED ${SOURCE_FILES})

# Set the target output directory:
set_target_properties(${TARGET_OUTPUTNAME} PROPERTIES LIBRARY_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/")
set_target_properties(${TARGET_OUTPUTNAME} PROPERTIES  RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/")

unset(SOURCE_FILES)

# -------------------------------------------------------------------------------------------------

# Linker options:
set(LINKER_OPTIONS_LIST)
list(APPEND LINKER_OPTIONS_LIST "-Wl,--no-undefined")
list(APPEND LINKER_OPTIONS_LIST "${VTE-2.91_LINK_LIBRARIES}")
list(APPEND LINKER_OPTIONS_LIST "${CODEBLOCKS_LINK_LIBRARIES}")
list(APPEND LINKER_OPTIONS_LIST "${wxWidgets_LIBRARIES}")
target_link_libraries(${TARGET_OUTPUTNAME} PRIVATE ${LINKER_OPTIONS_LIST})
unset(LINKER_OPTIONS_LIST)

# Target after commands:
# zip -j9 cbTerminal.zip manifest.xml
add_custom_command(
                   TARGET ${TARGET_OUTPUTNAME}
                   POST_BUILD COMMAND zip -j9 cbTerminal.zip manifest.xml
                   WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
                  )

# cd resources && zip -Rq9 ../cbTerminal.zip terminal-16.png && cd ..
add_custom_command(
                   TARGET ${TARGET_OUTPUTNAME}
                   POST_BUILD COMMAND cd resources && zip -Rq9 ../cbTerminal.zip terminal-16.png && cd ..
                   WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
                  )

# cp -f libcbTerminal.so cbTerminal.so
add_custom_command(
                   TARGET ${TARGET_OUTPUTNAME}
                   POST_BUILD COMMAND cp -f libcbTerminal.so cbTerminal.so
                   WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
                  )

# zip -j9 cbTerminal.cbplugin cbTerminal.so cbTerminal.zip
add_custom_command(
                   TARGET ${TARGET_OUTPUTNAME}
                   POST_BUILD COMMAND zip -j9 cbTerminal.cbplugin cbTerminal.so cbTerminal.zip
                   WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
                  )

# rm -f cbTerminal.so
add_custom_command(
                   TARGET ${TARGET_OUTPUTNAME}
                   POST_BUILD COMMAND rm -f cbTerminal.so
                   WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
                  )


unset(TARGET_OUTPUTNAME)
# -------------------------------------------------------------------------------------------------

